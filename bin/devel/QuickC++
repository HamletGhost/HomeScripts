#!/usr/bin/env bash
#
# Creates an executable from the first of the specified files.
#
# The following variables are added to the compilation/linking command line:
# - CPPFLAGS (also adds some default flags)
# - CXXFLAGS
# - OPTFLAGS
# - LDFLAGS
# - LIB (expected "-Llibdir -llibrary ...")
#

DEFAULT_CPPFLAGS="-Wall -pedantic -std=c++17"

if [[ -z "$CXX" ]]; then
  if [[ -n "${WITHCLANG//0}" ]]; then
    CXX='clang++'
  else
    CXX='g++'
  fi
fi


function RemoveSourceSuffix {
	local Name="$1"
	local OldName=""
	while [[ "$Name" != "$OldName" ]]; do
		OldName="$Name"
		for Suffix in '.c' '.C' '.cpp' '.cxx' '.cc' '.h' '.H' '.hpp' '.hxx' '.hh' ; do
			Name="${Name%${Suffix}}"
		done
	done
	echo "$Name"
} # RemoveSourceSuffix()

function Exec() {
	local -a Cmd=( "$@" )
	[[ -z "${QUIET//0}" ]] && echo "${Cmd[@]}"
	"${Cmd[@]}"
} # Exec()


MainFile="$1"
if [[ ! -r "$MainFile" ]]; then
	echo "You have to specify an existing C++ source file." >&2
	exit 2
fi

ExecFile="$(RemoveSourceSuffix "$MainFile").exe"

CPPFLAGS="${DEFAULT_CPPFLAGS} ${CPPFLAGS}"

Exec $CXX $CPPFLAGS $CXXFLAGS $OPTFLAGS $LDFLAGS $LIB -o "$ExecFile" "$@"
res=$?
if [[ $res == 0 ]]; then
	echo "Executable file created: '${ExecFile}'"
fi
exit $res

