#!/bin/sh

SCRIPTNAME="$(basename "$0")"

SynergyCore="synergy-core"

: ${SYNERGY_EXEC:=$(which "$SynergyCore")}

: ${CONFIGURATION_KEY:="${SCRIPTNAME#synergy-}"}

function CloseAllSynergy() {
	if ps -C "$SynergyCore" > /dev/null ; then
		echo "Closing synergy clients and servers already running."
		killall "$SYNERGY_EXEC"
	fi
}

function Exec() {
	local -a Cmd=( "$@" )
	echo "CMD> ${Cmd[@]}"
	"${Cmd[@]}"
}

declare -r ClientTag='clientOf'

declare -a CLIENTS=( ${CONFIGURATION_KEY//+/ } )

if [[ "${CLIENTS[0]}" == "$ClientTag" ]]; then
	Server="${CLIENTS[1]}"
	Address="${1:-${Server}}"
	echo "Starting synergy${HOSTNAME:+" from ${HOSTNAME}"} in client mode (host: ${Address})"
	
	CloseAllSynergy
	Exec "$SYNERGY_EXEC" --client ${DISPLAY:+--display "$DISPLAY"} ${Address:+"$Address"}
	
else
	Server="$(hostname)"

	: ${CONFIGFILE:="${HOME}/local/etc/synergy/${CONFIGURATION_KEY}.conf"}
	if [[ ! -r "$CONFIGFILE" ]]; then
		echo "Configuration file '${CONFIGFILE}' not available!" >&2
		exit 2
	fi
	
	CloseAllSynergy
	HostName="${HOSTNAME:-"$(hostname)"}"
	echo "Starting synergy server on '${HostName}'..."
	Exec "$SYNERGY_EXEC" --server --config "$CONFIGFILE" --enable-drag-drop ${DISPLAY:+--display "$DISPLAY"}

	
	for Client in "${CLIENTS[@]}" ; do
		echo "Turning on synergy client on '${Client}'"
		# we explicitly disable X forwarding, since we don't want the client to send information to *our* X server!
		# also, since the synergy-clientOf+* scripts are expected to be in user's area,
		# user's enviromnent should be fully set up to allow bash to find it
		Exec ssh -x "$Client" "bash --login -c synergy-clientOf+${Server}"
	done
fi
